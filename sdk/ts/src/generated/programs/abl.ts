/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedAddWalletInstruction,
  type ParsedCreateListInstruction,
  type ParsedDeleteListInstruction,
  type ParsedRemoveWalletInstruction,
  type ParsedSetupExtraMetasInstruction,
} from '../instructions';

export const ABL_PROGRAM_ADDRESS =
  'ABL37q2e55mQ87KTRe6yF89TJoeysHKipwVwSRRPbTNY' as Address<'ABL37q2e55mQ87KTRe6yF89TJoeysHKipwVwSRRPbTNY'>;

export enum AblAccount {
  ListConfig,
  WalletEntry,
}

export function identifyAblAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): AblAccount {
  const data = 'data' in account ? account.data : account;
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return AblAccount.ListConfig;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return AblAccount.WalletEntry;
  }
  throw new Error(
    'The provided account could not be identified as a abl account.'
  );
}

export enum AblInstruction {
  CreateList,
  AddWallet,
  RemoveWallet,
  SetupExtraMetas,
  DeleteList,
}

export function identifyAblInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): AblInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return AblInstruction.CreateList;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return AblInstruction.AddWallet;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return AblInstruction.RemoveWallet;
  }
  if (containsBytes(data, getU8Encoder().encode(4), 0)) {
    return AblInstruction.SetupExtraMetas;
  }
  if (containsBytes(data, getU8Encoder().encode(5), 0)) {
    return AblInstruction.DeleteList;
  }
  throw new Error(
    'The provided instruction could not be identified as a abl instruction.'
  );
}

export type ParsedAblInstruction<
  TProgram extends string = 'ABL37q2e55mQ87KTRe6yF89TJoeysHKipwVwSRRPbTNY',
> =
  | ({
      instructionType: AblInstruction.CreateList;
    } & ParsedCreateListInstruction<TProgram>)
  | ({
      instructionType: AblInstruction.AddWallet;
    } & ParsedAddWalletInstruction<TProgram>)
  | ({
      instructionType: AblInstruction.RemoveWallet;
    } & ParsedRemoveWalletInstruction<TProgram>)
  | ({
      instructionType: AblInstruction.SetupExtraMetas;
    } & ParsedSetupExtraMetasInstruction<TProgram>)
  | ({
      instructionType: AblInstruction.DeleteList;
    } & ParsedDeleteListInstruction<TProgram>);
